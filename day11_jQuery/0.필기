1. jQuery
- 라이브러리
- 자주 사용하는 로직을 재사용할 수 있도록 고안된 소프트웨어를 라이브러리라고 한다.
- DOM을 내부에 감추고 보다 쉽게 웹페이지를 조작할 수 있도록 돕는 도구이다.
- https://jquery.com/
- 구글 CDN 통신으로 가져오고싶다
- 3.x스니펫 : <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
- javascript 구현에 필요한 상당수의 기능들을 미리 구현해 놓은 함수들의 집약체
- 이처럼 프로그래밍에 필요한 함수들을 언제든지 필요할 때 참조할 수 있도록 집약해 놓은 형태를 '라이브러리'라고 한다.
- HTML 제어 요소
- 요소의 탐색과 생성
- ajax 통신처리
- 익숙한 구문
- 다양한 플러그인

2. jQuery 제어의 대상 찾기

    $("li").css('color','red');
    
    $             -> jQuery    jquery를 시작할 것이라는 뜻. 너무 기니까 $한 글자로 줄인 것.
    ("li")        -> css선택자
    .css('color','red') -> 선택된 객체들에게 style을 color:red로 변경한다.

3. 축약된 코드
- innerHTML -> 선택자.html("문장");
- window.onload = function(...){...}  -> $(document).ready(function(...){...});
                또는 이렇게도 가능    -> $(function(...){...})

4. jQuery 제어할 대상에 접근하는 방법
- jQuery는 제어할 요소를 획득하기 위하여 $() 함수 안에 제어할 대상을 가리키는 CSS설렉터를 파라미터로 전달한다.
- 태그 요소
    let tag = $('h1');
- css 클래스 요소
    let mycss = $(".hello");
- hello 라는 id속성을 갖는 요소
    let myid = $('#id');
- 조합형 셀렉터
    let my = $("a,b");
- 자식 항목
    let my = $("a b");

5. 이벤트
- id가 btn이라는 버튼에다가 click이벤트를 바인딩하는 방법
    $("#btn).click(function(event){
        ...
    });

$("#btn).bind('click', function(event){
        ...
});

$("#btn).on('click', function(event){
        ...
});

6.keyevent
- keypress 이벤트는 영문, 특수문자에 대해서는 동작하지만 한글에 대해서는 동작하지 않는다.
- 그러므로 균등한 키 이벤트 구현을 위해서는 keyup이벤트를 사용해야한다.

6-1. keycode
- 키보드가 자신의 어떤 키가 눌러졌는지 컴퓨터에게 보내는 데이터.
- 키보드의 키 하나하나에 각각 일련의 숫자값들이 할당되어있다.
- 키보드는 눌러진 키에 대응되는 숫자값을 컴퓨터에게 전달한다.

7. JSON
7-1. JSON표기법이란?
- JSON(JavaScript Object Notation)은 경량의 데이터 교환형식으로 프로그래밍 언어로부터 완전히 독립적이기 때문에,
서로 다른 프로그래밍 언어 간에 데이터를 교환하는데 가장 널리 사용되는 표기법이다.
7-2. JSON표기법의 중요성
- 문법으로서의 사용
- javascript에서는 하나의 객체 안에 함수와 변수를 함께 그룹화하여 포함시키기 위한 문법의 형태로서 JSON표기법이 사용된다.
- jQuery에서의 기본 문법 체계는 JSON으로 구성된다.
- javascript 소스코드 안에서 여러 개의 변수 값들을 계층적으로 표현하기 위해 사용된다.
7-3. 표기법의 기본 구조
- 이름(key)과 값(value)의 쌍으로 이루어진 객체 구조
- 빈 객체(  ' {}  ' )안에 배열과 같이 콤마(,)로 구별하여 여러 개의 값을 하나의 객체 안에 포함시킨다.
이 때, "이름:값"의 형태로 할당 된다.
    
    let 객체이름 = {
        이름 : 값, 이름 : 값, ...
    }
    
  - 데이터에 접근

	객체이름.이름;
